local repo = 'https://raw.githubusercontent.com/Cold-Script/Linoria/refs/heads/main/LinoriaLib/'

local Library = loadstring(game:HttpGet(repo .. 'Library_Loader.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Window = Library:CreateWindow({
    Title = ' [ ALPHA ] DOORS | YOUHUB V5',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})
local Tab = {
  Main = Window:AddTab("Main", "rbxassetid://4335489011"),
  Exploits = Window:AddTab("Exploits", "rbxassetid://4335489011"),
  ESP = Window:AddTab("ESP", "rbxassetid://4335489011"),
  Visual = Window:AddTab("Visual", "rbxassetid://4335489011"),
  Miscellaneous = Window:AddTab("Miscellaneous", "rbxassetid://4335489011"),
  Configs = Window:AddTab("Configs", "rbxassetid://4335489011")
}

local Flags = {
  ClosetInteract = false,
  UnlockInteract = false,
  ReviveOnDeath = false,
  ReplayOnDeath = false,
  LobbyOnDeath = false,
  InstanceInteract = false,
  CrossInteraction = false,
  RemoteInteraction = true,
  RangeMultiplier = 1,
  AutoPadlockUnlock = false,
  EntityNotifying = false,
  NotifyingEntityChat = false,
  PlaySound = false,
  TimeNotify = 3,
  AntiSnare = false,
  AntiDupe = false,
  AntiVacuum = false,
  AntiChandelier = false,
  AntiSeekArms = false,
  AntiEyes = false,
  AntiLookman = false,
  AntiBanana = false,
  AntiJeffTheKiller = false,
  VelocityLimit = false,
  VelocityLimitSet = 0,
  Footsteps = false,
  ClosetSpamJack = false,
  Stunned = false,
  LagBody = false,
  DisableScreech = false,
  DisableA90 = false,
  DisableHalt = false,
  DisableSeekTrigger = false,
  BypassTime = 0.2,
  SpeedBypass = false,
  LadderBypass = false
}
local LeftMainI = Tab.Main:AddLeftGroupbox("Automation")

LeftMainI:AddToggle("MyToggle",{
Text = "Closet Interact",
Default = Flags.ClosetInteract,
Callback = function(v)
_G.ClosetInteract = v
end}):AddKeyPicker('KeyPicker',{
	Default = 'Q',
	SyncToggleState = false,
	Mode = 'Always',
	Text = 'Closet Interact',
	NoUI = false,
        Callback = function(v)
_G.KeybindI = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ClosetInteract then 
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "Wardrobe" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
elseif v.Name == "BackdoorWardrobe" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
elseif v.Name == "RetroWardrobe" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
elseif v.Name == "Locker_Large" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
elseif v.Name == "Rooms_Locker" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
elseif v.Name == "Rooms_Frigde" then
v.HidePrompt.KeyboardKeyCode = _G.KeybindI
end
end
else
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "Wardrobe" then
v.HidePrompt.KeyboardKeyCode = "E"
elseif v.Name == "BackdoorWardrobe" then
v.HidePrompt.KeyboardKeyCode = "E"
elseif v.Name == "RetroWardrobe" then
v.HidePrompt.KeyboardKeyCode = "E"
elseif v.Name == "Locker_Large" then
v.HidePrompt.KeyboardKeyCode = "E"
elseif v.Name == "Rooms_Locker" then
v.HidePrompt.KeyboardKeyCode = "E"
elseif v.Name == "Rooms_Frigde" then
v.HidePrompt.KeyboardKeyCode = "E"
end
end
end
end)
end})
LeftMainI:AddToggle("MyToggle",{
Text = "Unlock Interact",
Default = Flags.UnlockInteract,
Callback = function(v)
_G.UnlockInteract = v
end}):AddKeyPicker('KeyPicker',{
	Default = 'X',
	SyncToggleState = false,
	Mode = 'Always',
	Text = 'Closet Interact',
	NoUI = false,
        Callback = function(v)
_G.KeybindII = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.UnlockInteract then 
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "Door" then
v.Lock.UnlockPrompt.KeyboardKeyCode = _G.KeybindII
end
end
else
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "Door" then
v.Lock.UnlockPrompt.KeyboardKeyCode = "E"
end
end
end
end)
end})

LeftMainI:AddToggle("MyToggle",{
Text = "Revive On Death",
Default = Flags.ReviveOnDeath,
Callback = function(v)
_G.ReviveOnDeath = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.ReviveOnDeath then
game:GetService("ReplicatedStorage").EntityInfo.Revive:FireServer()
end
end)
end})
LeftMainI:AddToggle("MyToggle",{
Text = "Replay On Death",
Default = Flags.ReplayOnDeath,
Callback = function(v)
_G.ReplayOnDeath = v
game:GetService("RunService").RenderStepped:Connect(function()
wait(5)
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.ReplayOnDeath then
game:GetService("ReplicatedStorage").EntityInfo.PlayAgain:FireServer()
end
end)
end})
LeftMainI:AddToggle("MyToggle",{
Text = "Lobby On Death",
Default = Flags.ReplayOnDeath,
Callback = function(v)
_G.LobbyOnDeath = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.LobbyOnDeath then
game:GetService("ReplicatedStorage").EntityInfo.Lobby:FireServer()
end
end)
end})
LeftMainI:AddDivider()
LeftMainI:AddToggle("MyToggle",{
Text = "Instance Interact",
Default = Flags.InstanceInteract,
Callback = function(v)
_G.InstanceInteract = v
game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(function(v)
if not _G.InstanceInteract then return end
if v:IsA("ProximityPrompt") then
if _G.InstanceInteract then
v.HoldDuration = 0
end
end
end)
end})
LeftMainI:AddToggle("MyToggle",{
Text = "Cross Interaction",
Default = Flags.CrossInteraction,
Callback = function(v)
_G.CrossInteraction = v
game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(function(v)
if not _G.CrossInteraction then return end
if v:IsA("ProximityPrompt") then
if _G.CrossInteraction then
v.RequiresLineOfSight = false
else
v.RequiresLineOfSight = true
end
end
end)
end})
LeftMainI:AddToggle("MyToggle",{
Text = "Remote Interaction",
Default = Flags.RemoteInteraction,
Callback = function(v)
_G.Reach = v
game:GetService("RunService").RenderStepped:Connect(function(v)
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v:IsA("ProximityPrompt") then
if _G.Reach then
v.MaxActivationDistance = _G.MaxMultiplier or 1
else
v.MaxActivationDistance = Flags.RangeMultiplier
end
end
end
end)
end})
LeftMainI:AddSlider("MySlider",{
Text = "Range Multiplier",
Default = Flags.RangeMultiplier,
Min = Flags.RangeMultiplier,
Max = 2,Rounding = 1,
Compact = true,
Callback = function(v)
_G.MaxMultiplier = v
end})
LeftMainI:AddDivider()
LeftMainI:AddToggle("MyToggle",{
Text = "Auto Padlock Unlock [50]",
Default = Flags.AutoPadlockUnlock,
Callback = function(v)
local EntityInfo = game:GetService("ReplicatedStorage").EntityInfo
local Floor = game:GetService("ReplicatedStorage").GameData.Floor
local Paper = workspace:FindFirstChild("LibraryHintPaper",true) or workspace:FindFirstChild("LibraryHintPaperHard",true) or Players:FindFirstChild("LibraryHintPaper",true) or Players:FindFirstChild("LibraryHintPaperHard",true)
if not Paper then
Library:Notify("Someone needs to have the Hint Paper to use this.")
return
end
local HintsNeeded = Floor.Value == "Fools" and 8 or 3
local Hints = 0
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
   if Collected:IsA("ImageLabel") then
      for _,Icon in pairs(Paper.UI:GetChildren()) do
          if tonumber(Icon.Name) then
             if Icon.ImageRectOffset == Collected.ImageRectOffset then
                Hints += 1
                end
               end
              end
             end
            end
           end
        if Hints < HintsNeeded then
            Library:Notify("You need to collect at least " .. HintsNeeded - Hints .. " more correct hint" .. (Hints ~= 2 and "s" or "") .. " to use this.")
            return
        end
        local t = {}
        for i = 1, Floor.Value == "Hotel" and 5 or 10 do
            local Icon = Paper.UI[i]
            local Number = -1
            for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
                if Collected.Name == "Icon" then
                    if Collected.ImageRectOffset == Icon.ImageRectOffset then
                        Number = tonumber(Collected.TextLabel.Text)
                    end
                end
            end
            table.insert(t,Number)
        end
        for one=0,t[1]==-1 and 9 or 0 do
            for two=0,t[2]==-1 and 9 or 0 do
                for three=0,t[3]==-1 and 9 or 0 do
                    for four=0,t[4]==-1 and 9 or 0 do
                        for five=0,t[5]==-1 and 9 or 0 do
                            if Floor.Value == "Fools" then
                                for six=0,t[6]==-1 and 9 or 0 do
                                    for seven=0,t[7]==-1 and 9 or 0 do
                                        for eight=0,t[8]==-1 and 9 or 0 do
                                            for nine=0,t[9]==-1 and 9 or 0 do
                                                for ten=0,t[10]==-1 and 9 or 0 do
                                                    EntityInfo.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5])..(t[6]==-1 and six or t[6])..(t[7]==-1 and seven or t[7])..(t[8]==-1 and eight or t[8])..(t[9]==-1 and nine or t[9])..(t[10]==-1 and ten or t[10]))
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                EntityInfo.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5]))
                            end
                        end
                    end
                end
           end
      end
end})
function Notifying(text, time, sound)
Library:Notify(text, time, sound)
end
local RightMainI = Tab.Main:AddRightGroupbox("Notifying")
RightMainI:AddToggle("MyToggle",{
Text = "Entity Notifying",
Default = Flags.EntityNotifying,
Callback = function(v)
_G.EntityNotifying = v
end})
RightMainI:AddDropdown('MyDropdown',{
	Values = {'Lookman', 'Eyes', 'Jeff-The-Killer', 'Blitz', 'Seek Chase', 'A60', 'A120'},
	Default = 0,
	Multi = true,
	Text = 'Entity List',
	Callback = function(Value)
_G.EntityList = v
if _G.EntityNotifying then
EntityNotifying = workspace.ChildAdded:Connect(function(child)
if _G.EntityList == "Lookman" then
if child.Name == "BackdoorLookman" then
Library:Notify("Lookman has spawn, dont look at it")
elseif _G.EntityList == "Eyes" then
elseif child.Name == "Eyes" then
Library:Notify("Eyes has spawn, dont look at it")
elseif _G.EntityList == "Jeff-The-Killer" then
elseif child.Name == "JeffTheKiller" then
Library:Notify("Jeff has spawn in next door, careful with it")
elseif _G.EntityList == "Blitz" then
elseif child.Name == "BackdoorRush" then
Library:Notify("Blitz has spawn, hide now")
elseif _G.EntityList == "Seek Chase" then
elseif child.Name == "SeekMoving" then
Library:Notify("Seek chase goodluck")
elseif child.Name == "SeekNewCloneMoving" then
Library:Notify("Seek chase goodluck")
elseif _G.EntityList == "A60" then
elseif child.Name == "A60" then
Library:Notify("A60 has spawn, hide now")
elseif _G.EntityList == "A120" then
elseif child.Name == "A120" then
Library:Notify("A120 has spawn, hide now")
end
end
end)
else
EntityNotifying:Disconnect()
end
end})











